<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xws111.sqlpractice.mapper.QuestionMapper">

    <resultMap id="BaseResultMap" type="com.xws111.sqlpractice.model.entity.Question">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="title" column="title" jdbcType="VARCHAR"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="answer" column="answer" jdbcType="VARCHAR"/>
            <result property="timeLimit" column="time_limit" jdbcType="INTEGER"/>
            <result property="favorNum" column="favor_num" jdbcType="INTEGER"/>
            <result property="submitNum" column="submit_num" jdbcType="BIGINT"/>
            <result property="accepted" column="accepted" jdbcType="BIGINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="isDeleted" column="is_deleted" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,title,content,
        answer,time_limit,favor_num,
        submit_num,accepted,create_time,
        update_time,is_deleted
    </sql>

    <!-- 用户获取问题列表 VO -->
    <resultMap id="QuestionResultMap" type="com.xws111.sqlpractice.model.vo.QuestionListVO">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="favorNum" column="favor_num" jdbcType="INTEGER"/>
        <result property="submitNum" column="submit_num" jdbcType="BIGINT"/>
        <result property="accepted" column="accepted" jdbcType="BIGINT"/>
        <result property="difficulty" column="difficulty" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getQuestionsVOList" resultMap="QuestionResultMap">
        SELECT
        q.id, q.title, q.content, q.answer, q.time_limit, q.favor_num, q.submit_num, q.accepted, q.create_time, q.update_time, q.is_deleted, q.difficulty
        FROM
        question q
        LEFT JOIN
        question_tag qt ON q.id = qt.question_id
        LEFT JOIN
        tag t ON t.id = qt.tag_id
        <where>
            <if test="keyword != null and keyword != ''">
                q.title LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="id != null">
                AND q.id = #{id}
            </if>
            AND q.is_deleted = 0
            <if test="tags != null and tags.size() > 0">
                AND (
                <foreach collection="tags" item="tag" separator=" OR ">
                    t.name = #{tag}
                </foreach>
                )
            </if>
        </where>
        GROUP BY q.id
        ORDER BY q.id
    </select>



    <!-- 管理员获取问题列表 -->
    <resultMap id="AdminQuestionList" type="com.xws111.sqlpractice.model.vo.AdminQuestionVO">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="answer" column="answer" jdbcType="VARCHAR"/>
        <result property="timeLimit" column="time_limit" jdbcType="INTEGER"/>
        <result property="favorNum" column="favor_num" jdbcType="INTEGER"/>
        <result property="submitNum" column="submit_num" jdbcType="BIGINT"/>
        <result property="accepted" column="accepted" jdbcType="BIGINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDeleted" column="is_deleted" jdbcType="TINYINT"/>
        <collection property="tags"
                    select="com.xws111.sqlpractice.mapper.TagMapper.getTagsByQuestionId"
                    column="id"/>
    </resultMap>
    <select id="getQuestionsList" resultMap="AdminQuestionList">
        SELECT
        q.id,
        q.title,
        q.content,
        q.answer,
        q.time_limit,
        q.favor_num,
        q.submit_num,
        q.accepted,
        q.create_time,
        q.update_time,
        q.difficulty
        FROM
        question q
        LEFT JOIN
        question_tag qt ON q.id = qt.question_id
        LEFT JOIN
        tag t ON qt.tag_id = t.id
        <where>
            <if test="title != null and title != ''">
                q.title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="id != null">
                AND q.id = #{id}
            </if>
            <if test="tags != null and tags.size() > 0">
                AND t.name IN
                <foreach item="tag" collection="tags" open="(" separator="," close=")">
                    #{tag}
                </foreach>
            </if>
            AND q.is_deleted = 0
        </where>
        GROUP BY
        q.id
        ORDER BY q.id
    </select>


    <select id="getQuestionACList" resultType="java.lang.Integer">
        SELECT DISTINCT question_id
        FROM question_submit
        WHERE user_id = #{userId} AND status = 2
    </select>


</mapper>
